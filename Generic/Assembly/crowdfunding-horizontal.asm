.code
  PUSH 80			contract crowdfunding{\r\n    ...
  PUSH 40			contract crowdfunding{\r\n    ...
  MSTORE 			contract crowdfunding{\r\n    ...
  CALLVALUE 			constructor(uint daysCompletio...
  DUP1 			olidity >
  ISZERO 			a 
  PUSH [tag] 1			a 
  JUMPI 			a 
  PUSH 0			0
  DUP1 			.
  REVERT 			4.22 <0.6.0;
tag 1			a 
  JUMPDEST 			a 
  POP 			constructor(uint daysCompletio...
  PUSH 40			constructor(uint daysCompletio...
  MLOAD 			constructor(uint daysCompletio...
  PUSHSIZE 			constructor(uint daysCompletio...
  CODESIZE 			constructor(uint daysCompletio...
  SUB 			constructor(uint daysCompletio...
  DUP1 			constructor(uint daysCompletio...
  PUSHSIZE 			constructor(uint daysCompletio...
  DUP4 			constructor(uint daysCompletio...
  CODECOPY 			constructor(uint daysCompletio...
  DUP2 			constructor(uint daysCompletio...
  DUP2 			constructor(uint daysCompletio...
  ADD 			constructor(uint daysCompletio...
  PUSH 40			constructor(uint daysCompletio...
  MSTORE 			constructor(uint daysCompletio...
  PUSH 60			ty
  DUP2 			oli
  LT 			a solidity 
  ISZERO 			ag
  PUSH [tag] 2			ag
  JUMPI 			ag
  PUSH 0			.
  DUP1 			0
  REVERT 			.4.22 <0.6.0
tag 2			ag
  JUMPDEST 			ag
  DUP2 			constructor(uint daysCompletio...
  ADD 			constructor(uint daysCompletio...
  SWAP1 			constructor(uint daysCompletio...
  DUP1 			constructor(uint daysCompletio...
  DUP1 			constructor(uint daysCompletio...
  MLOAD 			constructor(uint daysCompletio...
  SWAP1 			constructor(uint daysCompletio...
  PUSH 20			constructor(uint daysCompletio...
  ADD 			constructor(uint daysCompletio...
  SWAP1 			constructor(uint daysCompletio...
  SWAP3 			constructor(uint daysCompletio...
  SWAP2 			constructor(uint daysCompletio...
  SWAP1 			constructor(uint daysCompletio...
  DUP1 			constructor(uint daysCompletio...
  MLOAD 			constructor(uint daysCompletio...
  SWAP1 			constructor(uint daysCompletio...
  PUSH 20			constructor(uint daysCompletio...
  ADD 			constructor(uint daysCompletio...
  SWAP1 			constructor(uint daysCompletio...
  SWAP3 			constructor(uint daysCompletio...
  SWAP2 			constructor(uint daysCompletio...
  SWAP1 			constructor(uint daysCompletio...
  DUP1 			constructor(uint daysCompletio...
  MLOAD 			constructor(uint daysCompletio...
  PUSH 40			constructor(uint daysCompletio...
  MLOAD 			constructor(uint daysCompletio...
  SWAP4 			constructor(uint daysCompletio...
  SWAP3 			constructor(uint daysCompletio...
  SWAP2 			constructor(uint daysCompletio...
  SWAP1 			constructor(uint daysCompletio...
  DUP5 			constructor(uint daysCompletio...
  PUSH 100000000			.4.22 <0.6.
  DUP3 			y >
  GT 			dity >=0.4.22 <0.6.0
  ISZERO 			ol
  PUSH [tag] 3			ol
  JUMPI 			ol
  PUSH 0			 
  DUP1 			a
  REVERT 			\r\ncontract c
tag 3			ol
  JUMPDEST 			ol
  DUP4 			/Funder Str
  DUP3 			   
  ADD 			  \r\n    //Funder Stru
  SWAP2 			ng{\r\n    \r\n    //Funder St...
  POP 			ng{\r\n    \r\n    //Funder St...
  PUSH 20			nd;\r
  DUP3 			nt 
  ADD 			  uint fund;\r\n
  DUP6 			    \r\n   
  DUP2 			position;\r\n    }
  GT 			nt position;\r\n    }\r\n    \...
  ISZERO 			 u
  PUSH [tag] 4			 u
  JUMPI 			 u
  PUSH 0			 
  DUP1 			s
  REVERT 			ariables\r\n  
tag 4			 u
  JUMPDEST 			 u
  DUP3 			   
  MLOAD 			oal;\r\n    
  DUP7 			g(address
  PUSH 20			ma
  DUP3 			Funders;\r\n  
  MUL 			 allFunders;\r\n    map
  DUP4 			 address payable
  ADD 			\n    address payable[] allFun...
  GT 			t;\r\n    address payable[] al...
  PUSH 100000000			  address[]
  DUP3 			ess owner;\r\n
  GT 			ddress owner;\r\n    address[]...
  OR 			ues;\r\n    address owner;\r\n...
  ISZERO 			va
  PUSH [tag] 5			va
  JUMPI 			va
  PUSH 0			a
  DUP1 			T
  REVERT 			addressToVal
tag 5			va
  JUMPDEST 			va
  DUP1 			 => int) ind
  DUP4 			(ui
  MSTORE 			mapping(uint => int) inde
  PUSH 20			ruct
  DUP4 			Con
  ADD 			  //Constructo
  SWAP3 			   \r\n    //Constructo
  POP 			   \r\n    //Constructo
  POP 			pragma solidity >=0.4.22 <0.6....
  POP 			pragma solidity >=0.4.22 <0.6....
  SWAP1 			constructor(uint daysCompletio...
  DUP1 			constructor(uint daysCompletio...
  MLOAD 			constructor(uint daysCompletio...
  SWAP1 			constructor(uint daysCompletio...
  PUSH 20			constructor(uint daysCompletio...
  ADD 			constructor(uint daysCompletio...
  SWAP1 			constructor(uint daysCompletio...
  PUSH 20			constructor(uint daysCompletio...
  MUL 			constructor(uint daysCompletio...
  DUP1 			constructor(uint daysCompletio...
  DUP4 			constructor(uint daysCompletio...
  DUP4 			constructor(uint daysCompletio...
  PUSH 0			2
tag 6			olidity >=0.4.22 <0.6.0;\r\n\r...
  JUMPDEST 			olidity >=0.4.22 <0.6.0;\r\n\r...
  DUP4 			\n\r\n
  DUP2 			0
  LT 			.6.0;\r\n\r\nc
  ISZERO 			olidity >=0.4.22 <0.6.0;\r\n\r...
  PUSH [tag] 8			olidity >=0.4.22 <0.6.0;\r\n\r...
  JUMPI 			olidity >=0.4.22 <0.6.0;\r\n\r...
  DUP1 			u
  DUP3 			uct
  ADD 			 struct fun
  MLOAD 			t\r\n    struct fund
  DUP2 			t
  DUP5 			der
  ADD 			/Funder Str
  MSTORE 			\r\n    //Funder Struct\r\n   ...
  PUSH 20			nd
  DUP2 			d
  ADD 			crowdfundi
  SWAP1 			ract crowdfundi
  POP 			ract crowdfundi
  PUSH [tag] 6			olidity >=0.4.22 <0.6.0;\r\n\r...
  JUMP 			olidity >=0.4.22 <0.6.0;\r\n\r...
tag 8			olidity >=0.4.22 <0.6.0;\r\n\r...
  JUMPDEST 			olidity >=0.4.22 <0.6.0;\r\n\r...
  POP 			ity >=0.4.22 <
  POP 			constructor(uint daysCompletio...
  POP 			constructor(uint daysCompletio...
  POP 			constructor(uint daysCompletio...
  SWAP1 			constructor(uint daysCompletio...
  POP 			constructor(uint daysCompletio...
  ADD 			constructor(uint daysCompletio...
  PUSH 40			constructor(uint daysCompletio...
  MSTORE 			constructor(uint daysCompletio...
  POP 			constructor(uint daysCompletio...
  POP 			constructor(uint daysCompletio...
  POP 			constructor(uint daysCompletio...
  PUSH 0			0
  DUP3 			goalinWei
  EQ 			goalinWei != 0
  ISZERO 			goalinWei != 0
  PUSH [tag] 11			require(goalinWei != 0,"Need g...
  JUMPI 			require(goalinWei != 0,"Need g...
  PUSH 40			require(goalinWei != 0,"Need g...
  MLOAD 			require(goalinWei != 0,"Need g...
  PUSH 8C379A000000000000000000000000000000000000000000000000000000000			require(goalinWei != 0,"Need g...
  DUP2 			require(goalinWei != 0,"Need g...
  MSTORE 			require(goalinWei != 0,"Need g...
  PUSH 4			require(goalinWei != 0,"Need g...
  ADD 			require(goalinWei != 0,"Need g...
  DUP1 			require(goalinWei != 0,"Need g...
  DUP1 			require(goalinWei != 0,"Need g...
  PUSH 20			require(goalinWei != 0,"Need g...
  ADD 			require(goalinWei != 0,"Need g...
  DUP3 			require(goalinWei != 0,"Need g...
  DUP2 			require(goalinWei != 0,"Need g...
  SUB 			require(goalinWei != 0,"Need g...
  DUP3 			require(goalinWei != 0,"Need g...
  MSTORE 			require(goalinWei != 0,"Need g...
  PUSH 1E			require(goalinWei != 0,"Need g...
  DUP2 			require(goalinWei != 0,"Need g...
  MSTORE 			require(goalinWei != 0,"Need g...
  PUSH 20			require(goalinWei != 0,"Need g...
  ADD 			require(goalinWei != 0,"Need g...
  DUP1 			require(goalinWei != 0,"Need g...
  PUSH 4E65656420676F616C20746F206265206D6F7265207468616E207A65726F0000			require(goalinWei != 0,"Need g...
  DUP2 			require(goalinWei != 0,"Need g...
  MSTORE 			require(goalinWei != 0,"Need g...
  POP 			require(goalinWei != 0,"Need g...
  PUSH 20			require(goalinWei != 0,"Need g...
  ADD 			require(goalinWei != 0,"Need g...
  SWAP2 			require(goalinWei != 0,"Need g...
  POP 			require(goalinWei != 0,"Need g...
  POP 			require(goalinWei != 0,"Need g...
  PUSH 40			require(goalinWei != 0,"Need g...
  MLOAD 			require(goalinWei != 0,"Need g...
  DUP1 			require(goalinWei != 0,"Need g...
  SWAP2 			require(goalinWei != 0,"Need g...
  SUB 			require(goalinWei != 0,"Need g...
  SWAP1 			require(goalinWei != 0,"Need g...
  REVERT 			require(goalinWei != 0,"Need g...
tag 11			require(goalinWei != 0,"Need g...
  JUMPDEST 			require(goalinWei != 0,"Need g...
  PUSH 0			0
  DUP2 			insertValues
  MLOAD 			insertValues.length
  EQ 			insertValues.length != 0
  ISZERO 			insertValues.length != 0
  PUSH [tag] 12			require(insertValues.length !=...
  JUMPI 			require(insertValues.length !=...
  PUSH 40			require(insertValues.length !=...
  MLOAD 			require(insertValues.length !=...
  PUSH 8C379A000000000000000000000000000000000000000000000000000000000			require(insertValues.length !=...
  DUP2 			require(insertValues.length !=...
  MSTORE 			require(insertValues.length !=...
  PUSH 4			require(insertValues.length !=...
  ADD 			require(insertValues.length !=...
  DUP1 			require(insertValues.length !=...
  DUP1 			require(insertValues.length !=...
  PUSH 20			require(insertValues.length !=...
  ADD 			require(insertValues.length !=...
  DUP3 			require(insertValues.length !=...
  DUP2 			require(insertValues.length !=...
  SUB 			require(insertValues.length !=...
  DUP3 			require(insertValues.length !=...
  MSTORE 			require(insertValues.length !=...
  PUSH B			require(insertValues.length !=...
  DUP2 			require(insertValues.length !=...
  MSTORE 			require(insertValues.length !=...
  PUSH 20			require(insertValues.length !=...
  ADD 			require(insertValues.length !=...
  DUP1 			require(insertValues.length !=...
  PUSH 4E6565642076616C756573000000000000000000000000000000000000000000			require(insertValues.length !=...
  DUP2 			require(insertValues.length !=...
  MSTORE 			require(insertValues.length !=...
  POP 			require(insertValues.length !=...
  PUSH 20			require(insertValues.length !=...
  ADD 			require(insertValues.length !=...
  SWAP2 			require(insertValues.length !=...
  POP 			require(insertValues.length !=...
  POP 			require(insertValues.length !=...
  PUSH 40			require(insertValues.length !=...
  MLOAD 			require(insertValues.length !=...
  DUP1 			require(insertValues.length !=...
  SWAP2 			require(insertValues.length !=...
  SUB 			require(insertValues.length !=...
  SWAP1 			require(insertValues.length !=...
  REVERT 			require(insertValues.length !=...
tag 12			require(insertValues.length !=...
  JUMPDEST 			require(insertValues.length !=...
  CALLER 			msg.sender
  PUSH 3			owner
  PUSH 0			owner
  PUSH 100			owner = msg.sender
  EXP 			owner = msg.sender
  DUP2 			owner = msg.sender
  SLOAD 			owner = msg.sender
  DUP2 			owner = msg.sender
  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner = msg.sender
  MUL 			owner = msg.sender
  NOT 			owner = msg.sender
  AND 			owner = msg.sender
  SWAP1 			owner = msg.sender
  DUP4 			owner = msg.sender
  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner = msg.sender
  AND 			owner = msg.sender
  MUL 			owner = msg.sender
  OR 			owner = msg.sender
  SWAP1 			owner = msg.sender
  SSTORE 			owner = msg.sender
  POP 			owner = msg.sender
  DUP2 			goalinWei
  PUSH 1			goal
  DUP2 			goal = goalinWei
  SWAP1 			goal = goalinWei
  SSTORE 			goal = goalinWei
  POP 			goal = goalinWei
  DUP3 			daysCompletion
  TIMESTAMP 			now
  ADD 			now + (/*24 * 60 * 60 */ daysC...
  PUSH 0			finishTime
  DUP2 			finishTime = now + (/*24 * 60 ...
  SWAP1 			finishTime = now + (/*24 * 60 ...
  SSTORE 			finishTime = now + (/*24 * 60 ...
  POP 			finishTime = now + (/*24 * 60 ...
  PUSH 0			uint i
  DUP1 			0
  SWAP1 			uint i = 0
  POP 			uint i = 0
tag 13			for(uint i = 0;i<insertValues....
  JUMPDEST 			for(uint i = 0;i<insertValues....
  DUP2 			insertValues
  MLOAD 			insertValues.length
  DUP2 			i
  LT 			i<insertValues.length
  ISZERO 			for(uint i = 0;i<insertValues....
  PUSH [tag] 14			for(uint i = 0;i<insertValues....
  JUMPI 			for(uint i = 0;i<insertValues....
  PUSH 2			values
  DUP3 			insertValues
  DUP3 			i
  DUP2 			insertValues[i]
  MLOAD 			insertValues[i]
  DUP2 			insertValues[i]
  LT 			insertValues[i]
  PUSH [tag] 16			insertValues[i]
  JUMPI 			insertValues[i]
  INVALID 			insertValues[i]
tag 16			insertValues[i]
  JUMPDEST 			insertValues[i]
  PUSH 20			insertValues[i]
  MUL 			insertValues[i]
  PUSH 20			insertValues[i]
  ADD 			insertValues[i]
  ADD 			insertValues[i]
  MLOAD 			insertValues[i]
  SWAP1 			values.push(insertValues[i])
  DUP1 			values.push(insertValues[i])
  PUSH 1			t
  DUP2 			\n\r\n
  SLOAD 			.6.0;\r\n\r\nc
  ADD 			2 <0.6.0;\r\n\r\ncontr
  DUP1 			{\r\n    \r\n 
  DUP3 			ndi
  SSTORE 			crowdfunding{\r\n    \r\n  
  DUP1 			Struct\r\n  
  SWAP2 			Funder Struct\r\n  
  POP 			Funder Struct\r\n  
  POP 			pragma solidity >=0.4.22 <0.6....
  SWAP1 			values.push(insertValues[i])
  PUSH 1			values.push(insertValues[i])
  DUP3 			values.push(insertValues[i])
  SUB 			values.push(insertValues[i])
  SWAP1 			values.push(insertValues[i])
  PUSH 0			values.push(insertValues[i])
  MSTORE 			values.push(insertValues[i])
  PUSH 20			values.push(insertValues[i])
  PUSH 0			values.push(insertValues[i])
  KECCAK256 			values.push(insertValues[i])
  ADD 			values.push(insertValues[i])
  PUSH 0			values.push(insertValues[i])
  SWAP1 			values.push(insertValues[i])
  SWAP2 			values.push(insertValues[i])
  SWAP3 			values.push(insertValues[i])
  SWAP1 			values.push(insertValues[i])
  SWAP2 			values.push(insertValues[i])
  SWAP1 			values.push(insertValues[i])
  SWAP2 			values.push(insertValues[i])
  POP 			values.push(insertValues[i])
  SSTORE 			values.push(insertValues[i])
  POP 			values.push(insertValues[i])
  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			-1
  PUSH 7			indexes
  PUSH 0			indexes[insertValues[i]]
  DUP5 			insertValues
  DUP5 			i
  DUP2 			insertValues[i]
  MLOAD 			insertValues[i]
  DUP2 			insertValues[i]
  LT 			insertValues[i]
  PUSH [tag] 18			insertValues[i]
  JUMPI 			insertValues[i]
  INVALID 			insertValues[i]
tag 18			insertValues[i]
  JUMPDEST 			insertValues[i]
  PUSH 20			insertValues[i]
  MUL 			insertValues[i]
  PUSH 20			insertValues[i]
  ADD 			insertValues[i]
  ADD 			insertValues[i]
  MLOAD 			insertValues[i]
  DUP2 			indexes[insertValues[i]]
  MSTORE 			indexes[insertValues[i]]
  PUSH 20			indexes[insertValues[i]]
  ADD 			indexes[insertValues[i]]
  SWAP1 			indexes[insertValues[i]]
  DUP2 			indexes[insertValues[i]]
  MSTORE 			indexes[insertValues[i]]
  PUSH 20			indexes[insertValues[i]]
  ADD 			indexes[insertValues[i]]
  PUSH 0			indexes[insertValues[i]]
  KECCAK256 			indexes[insertValues[i]]
  DUP2 			indexes[insertValues[i]] = -1
  SWAP1 			indexes[insertValues[i]] = -1
  SSTORE 			indexes[insertValues[i]] = -1
  POP 			indexes[insertValues[i]] = -1
  DUP1 			i++
  DUP1 			i++
  PUSH 1			i++
  ADD 			i++
  SWAP2 			i++
  POP 			i++
  POP 			i++
  PUSH [tag] 13			for(uint i = 0;i<insertValues....
  JUMP 			for(uint i = 0;i<insertValues....
tag 14			for(uint i = 0;i<insertValues....
  JUMPDEST 			for(uint i = 0;i<insertValues....
  POP 			for(uint i = 0;i<insertValues....
  POP 			constructor(uint daysCompletio...
  POP 			constructor(uint daysCompletio...
  POP 			constructor(uint daysCompletio...
  PUSH #[$] 0000000000000000000000000000000000000000000000000000000000000000			contract crowdfunding{\r\n    ...
  DUP1 			contract crowdfunding{\r\n    ...
  PUSH [$] 0000000000000000000000000000000000000000000000000000000000000000			contract crowdfunding{\r\n    ...
  PUSH 0			contract crowdfunding{\r\n    ...
  CODECOPY 			contract crowdfunding{\r\n    ...
  PUSH 0			contract crowdfunding{\r\n    ...
  RETURN 			contract crowdfunding{\r\n    ...
.data
  0:
    .code
      PUSH 80			contract crowdfunding{\r\n    ...
      PUSH 40			contract crowdfunding{\r\n    ...
      MSTORE 			contract crowdfunding{\r\n    ...
      PUSH 4			contract crowdfunding{\r\n    ...
      CALLDATASIZE 			contract crowdfunding{\r\n    ...
      LT 			contract crowdfunding{\r\n    ...
      PUSH [tag] 1			contract crowdfunding{\r\n    ...
      JUMPI 			contract crowdfunding{\r\n    ...
      PUSH 0			contract crowdfunding{\r\n    ...
      CALLDATALOAD 			contract crowdfunding{\r\n    ...
      PUSH E0			contract crowdfunding{\r\n    ...
      SHR 			contract crowdfunding{\r\n    ...
      DUP1 			contract crowdfunding{\r\n    ...
      PUSH 12065FE0			contract crowdfunding{\r\n    ...
      EQ 			contract crowdfunding{\r\n    ...
      PUSH [tag] 2			contract crowdfunding{\r\n    ...
      JUMPI 			contract crowdfunding{\r\n    ...
      DUP1 			contract crowdfunding{\r\n    ...
      PUSH 19EB4A90			contract crowdfunding{\r\n    ...
      EQ 			contract crowdfunding{\r\n    ...
      PUSH [tag] 3			contract crowdfunding{\r\n    ...
      JUMPI 			contract crowdfunding{\r\n    ...
      DUP1 			contract crowdfunding{\r\n    ...
      PUSH AE6F4A5D			contract crowdfunding{\r\n    ...
      EQ 			contract crowdfunding{\r\n    ...
      PUSH [tag] 4			contract crowdfunding{\r\n    ...
      JUMPI 			contract crowdfunding{\r\n    ...
      DUP1 			contract crowdfunding{\r\n    ...
      PUSH B60D4288			contract crowdfunding{\r\n    ...
      EQ 			contract crowdfunding{\r\n    ...
      PUSH [tag] 5			contract crowdfunding{\r\n    ...
      JUMPI 			contract crowdfunding{\r\n    ...
      DUP1 			contract crowdfunding{\r\n    ...
      PUSH EBAE46BE			contract crowdfunding{\r\n    ...
      EQ 			contract crowdfunding{\r\n    ...
      PUSH [tag] 6			contract crowdfunding{\r\n    ...
      JUMPI 			contract crowdfunding{\r\n    ...
    tag 1			contract crowdfunding{\r\n    ...
      JUMPDEST 			contract crowdfunding{\r\n    ...
      PUSH 0			contract crowdfunding{\r\n    ...
      DUP1 			contract crowdfunding{\r\n    ...
      REVERT 			contract crowdfunding{\r\n    ...
    tag 2			function getBalance() public v...
      JUMPDEST 			function getBalance() public v...
      CALLVALUE 			function getBalance() public v...
      DUP1 			olidity >
      ISZERO 			a 
      PUSH [tag] 7			a 
      JUMPI 			a 
      PUSH 0			0
      DUP1 			.
      REVERT 			4.22 <0.6.0;
    tag 7			a 
      JUMPDEST 			a 
      POP 			function getBalance() public v...
      PUSH [tag] 8			function getBalance() public v...
      PUSH [tag] 9			function getBalance() public v...
      JUMP [in]			function getBalance() public v...
    tag 8			function getBalance() public v...
      JUMPDEST 			function getBalance() public v...
      PUSH 40			function getBalance() public v...
      MLOAD 			function getBalance() public v...
      DUP1 			function getBalance() public v...
      DUP3 			function getBalance() public v...
      DUP2 			function getBalance() public v...
      MSTORE 			function getBalance() public v...
      PUSH 20			function getBalance() public v...
      ADD 			function getBalance() public v...
      SWAP2 			function getBalance() public v...
      POP 			function getBalance() public v...
      POP 			function getBalance() public v...
      PUSH 40			function getBalance() public v...
      MLOAD 			function getBalance() public v...
      DUP1 			function getBalance() public v...
      SWAP2 			function getBalance() public v...
      SUB 			function getBalance() public v...
      SWAP1 			function getBalance() public v...
      RETURN 			function getBalance() public v...
    tag 3			function getValues() public vi...
      JUMPDEST 			function getValues() public vi...
      CALLVALUE 			function getValues() public vi...
      DUP1 			olidity >
      ISZERO 			a 
      PUSH [tag] 10			a 
      JUMPI 			a 
      PUSH 0			0
      DUP1 			.
      REVERT 			4.22 <0.6.0;
    tag 10			a 
      JUMPDEST 			a 
      POP 			function getValues() public vi...
      PUSH [tag] 11			function getValues() public vi...
      PUSH [tag] 12			function getValues() public vi...
      JUMP [in]			function getValues() public vi...
    tag 11			function getValues() public vi...
      JUMPDEST 			function getValues() public vi...
      PUSH 40			function getValues() public vi...
      MLOAD 			function getValues() public vi...
      DUP1 			function getValues() public vi...
      DUP1 			function getValues() public vi...
      PUSH 20			function getValues() public vi...
      ADD 			function getValues() public vi...
      DUP3 			function getValues() public vi...
      DUP2 			function getValues() public vi...
      SUB 			function getValues() public vi...
      DUP3 			function getValues() public vi...
      MSTORE 			function getValues() public vi...
      DUP4 			function getValues() public vi...
      DUP2 			function getValues() public vi...
      DUP2 			function getValues() public vi...
      MLOAD 			function getValues() public vi...
      DUP2 			function getValues() public vi...
      MSTORE 			function getValues() public vi...
      PUSH 20			function getValues() public vi...
      ADD 			function getValues() public vi...
      SWAP2 			function getValues() public vi...
      POP 			function getValues() public vi...
      DUP1 			function getValues() public vi...
      MLOAD 			function getValues() public vi...
      SWAP1 			function getValues() public vi...
      PUSH 20			function getValues() public vi...
      ADD 			function getValues() public vi...
      SWAP1 			function getValues() public vi...
      PUSH 20			function getValues() public vi...
      MUL 			function getValues() public vi...
      DUP1 			function getValues() public vi...
      DUP4 			function getValues() public vi...
      DUP4 			function getValues() public vi...
      PUSH 0			2
    tag 13			olidity >=0.4.22 <0.6.0;\r\n\r...
      JUMPDEST 			olidity >=0.4.22 <0.6.0;\r\n\r...
      DUP4 			\n\r\n
      DUP2 			0
      LT 			.6.0;\r\n\r\nc
      ISZERO 			olidity >=0.4.22 <0.6.0;\r\n\r...
      PUSH [tag] 15			olidity >=0.4.22 <0.6.0;\r\n\r...
      JUMPI 			olidity >=0.4.22 <0.6.0;\r\n\r...
      DUP1 			u
      DUP3 			uct
      ADD 			 struct fun
      MLOAD 			t\r\n    struct fund
      DUP2 			t
      DUP5 			der
      ADD 			/Funder Str
      MSTORE 			\r\n    //Funder Struct\r\n   ...
      PUSH 20			nd
      DUP2 			d
      ADD 			crowdfundi
      SWAP1 			ract crowdfundi
      POP 			ract crowdfundi
      PUSH [tag] 13			olidity >=0.4.22 <0.6.0;\r\n\r...
      JUMP 			olidity >=0.4.22 <0.6.0;\r\n\r...
    tag 15			olidity >=0.4.22 <0.6.0;\r\n\r...
      JUMPDEST 			olidity >=0.4.22 <0.6.0;\r\n\r...
      POP 			ity >=0.4.22 <
      POP 			function getValues() public vi...
      POP 			function getValues() public vi...
      POP 			function getValues() public vi...
      SWAP1 			function getValues() public vi...
      POP 			function getValues() public vi...
      ADD 			function getValues() public vi...
      SWAP3 			function getValues() public vi...
      POP 			function getValues() public vi...
      POP 			function getValues() public vi...
      POP 			function getValues() public vi...
      PUSH 40			function getValues() public vi...
      MLOAD 			function getValues() public vi...
      DUP1 			function getValues() public vi...
      SWAP2 			function getValues() public vi...
      SUB 			function getValues() public vi...
      SWAP1 			function getValues() public vi...
      RETURN 			function getValues() public vi...
    tag 4			function getFunderList() publi...
      JUMPDEST 			function getFunderList() publi...
      CALLVALUE 			function getFunderList() publi...
      DUP1 			olidity >
      ISZERO 			a 
      PUSH [tag] 16			a 
      JUMPI 			a 
      PUSH 0			0
      DUP1 			.
      REVERT 			4.22 <0.6.0;
    tag 16			a 
      JUMPDEST 			a 
      POP 			function getFunderList() publi...
      PUSH [tag] 17			function getFunderList() publi...
      PUSH [tag] 18			function getFunderList() publi...
      JUMP [in]			function getFunderList() publi...
    tag 17			function getFunderList() publi...
      JUMPDEST 			function getFunderList() publi...
      PUSH 40			function getFunderList() publi...
      MLOAD 			function getFunderList() publi...
      DUP1 			function getFunderList() publi...
      DUP1 			function getFunderList() publi...
      PUSH 20			function getFunderList() publi...
      ADD 			function getFunderList() publi...
      DUP3 			function getFunderList() publi...
      DUP2 			function getFunderList() publi...
      SUB 			function getFunderList() publi...
      DUP3 			function getFunderList() publi...
      MSTORE 			function getFunderList() publi...
      DUP4 			function getFunderList() publi...
      DUP2 			function getFunderList() publi...
      DUP2 			function getFunderList() publi...
      MLOAD 			function getFunderList() publi...
      DUP2 			function getFunderList() publi...
      MSTORE 			function getFunderList() publi...
      PUSH 20			function getFunderList() publi...
      ADD 			function getFunderList() publi...
      SWAP2 			function getFunderList() publi...
      POP 			function getFunderList() publi...
      DUP1 			function getFunderList() publi...
      MLOAD 			function getFunderList() publi...
      SWAP1 			function getFunderList() publi...
      PUSH 20			function getFunderList() publi...
      ADD 			function getFunderList() publi...
      SWAP1 			function getFunderList() publi...
      PUSH 20			function getFunderList() publi...
      MUL 			function getFunderList() publi...
      DUP1 			function getFunderList() publi...
      DUP4 			function getFunderList() publi...
      DUP4 			function getFunderList() publi...
      PUSH 0			2
    tag 19			olidity >=0.4.22 <0.6.0;\r\n\r...
      JUMPDEST 			olidity >=0.4.22 <0.6.0;\r\n\r...
      DUP4 			\n\r\n
      DUP2 			0
      LT 			.6.0;\r\n\r\nc
      ISZERO 			olidity >=0.4.22 <0.6.0;\r\n\r...
      PUSH [tag] 21			olidity >=0.4.22 <0.6.0;\r\n\r...
      JUMPI 			olidity >=0.4.22 <0.6.0;\r\n\r...
      DUP1 			u
      DUP3 			uct
      ADD 			 struct fun
      MLOAD 			t\r\n    struct fund
      DUP2 			t
      DUP5 			der
      ADD 			/Funder Str
      MSTORE 			\r\n    //Funder Struct\r\n   ...
      PUSH 20			nd
      DUP2 			d
      ADD 			crowdfundi
      SWAP1 			ract crowdfundi
      POP 			ract crowdfundi
      PUSH [tag] 19			olidity >=0.4.22 <0.6.0;\r\n\r...
      JUMP 			olidity >=0.4.22 <0.6.0;\r\n\r...
    tag 21			olidity >=0.4.22 <0.6.0;\r\n\r...
      JUMPDEST 			olidity >=0.4.22 <0.6.0;\r\n\r...
      POP 			ity >=0.4.22 <
      POP 			function getFunderList() publi...
      POP 			function getFunderList() publi...
      POP 			function getFunderList() publi...
      SWAP1 			function getFunderList() publi...
      POP 			function getFunderList() publi...
      ADD 			function getFunderList() publi...
      SWAP3 			function getFunderList() publi...
      POP 			function getFunderList() publi...
      POP 			function getFunderList() publi...
      POP 			function getFunderList() publi...
      PUSH 40			function getFunderList() publi...
      MLOAD 			function getFunderList() publi...
      DUP1 			function getFunderList() publi...
      SWAP2 			function getFunderList() publi...
      SUB 			function getFunderList() publi...
      SWAP1 			function getFunderList() publi...
      RETURN 			function getFunderList() publi...
    tag 5			function fund() external payab...
      JUMPDEST 			function fund() external payab...
      PUSH [tag] 22			function fund() external payab...
      PUSH [tag] 23			function fund() external payab...
      JUMP [in]			function fund() external payab...
    tag 22			function fund() external payab...
      JUMPDEST 			function fund() external payab...
      STOP 			function fund() external payab...
    tag 6			function finishFunding() publi...
      JUMPDEST 			function finishFunding() publi...
      CALLVALUE 			function finishFunding() publi...
      DUP1 			olidity >
      ISZERO 			a 
      PUSH [tag] 24			a 
      JUMPI 			a 
      PUSH 0			0
      DUP1 			.
      REVERT 			4.22 <0.6.0;
    tag 24			a 
      JUMPDEST 			a 
      POP 			function finishFunding() publi...
      PUSH [tag] 25			function finishFunding() publi...
      PUSH [tag] 26			function finishFunding() publi...
      JUMP [in]			function finishFunding() publi...
    tag 25			function finishFunding() publi...
      JUMPDEST 			function finishFunding() publi...
      STOP 			function finishFunding() publi...
    tag 9			function getBalance() public v...
      JUMPDEST 			function getBalance() public v...
      PUSH 0			uint
      ADDRESS 			this
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			address(this).balance
      AND 			address(this).balance
      BALANCE 			address(this).balance
      SWAP1 			return address(this).balance
      POP 			return address(this).balance
      SWAP1 			function getBalance() public v...
      JUMP [out]			function getBalance() public v...
    tag 12			function getValues() public vi...
      JUMPDEST 			function getValues() public vi...
      PUSH 60			uint[] memory
      PUSH 2			values
      DUP1 			return values
      SLOAD 			return values
      DUP1 			return values
      PUSH 20			return values
      MUL 			return values
      PUSH 20			return values
      ADD 			return values
      PUSH 40			return values
      MLOAD 			return values
      SWAP1 			return values
      DUP2 			return values
      ADD 			return values
      PUSH 40			return values
      MSTORE 			return values
      DUP1 			return values
      SWAP3 			return values
      SWAP2 			return values
      SWAP1 			return values
      DUP2 			return values
      DUP2 			return values
      MSTORE 			return values
      PUSH 20			return values
      ADD 			return values
      DUP3 			return values
      DUP1 			return values
      SLOAD 			return values
      DUP1 			return values
      ISZERO 			return values
      PUSH [tag] 29			return values
      JUMPI 			return values
      PUSH 20			return values
      MUL 			return values
      DUP3 			return values
      ADD 			return values
      SWAP2 			return values
      SWAP1 			return values
      PUSH 0			return values
      MSTORE 			return values
      PUSH 20			return values
      PUSH 0			return values
      KECCAK256 			return values
      SWAP1 			return values
    tag 30			return values
      JUMPDEST 			return values
      DUP2 			return values
      SLOAD 			return values
      DUP2 			return values
      MSTORE 			return values
      PUSH 20			return values
      ADD 			return values
      SWAP1 			return values
      PUSH 1			return values
      ADD 			return values
      SWAP1 			return values
      DUP1 			return values
      DUP4 			return values
      GT 			return values
      PUSH [tag] 30			return values
      JUMPI 			return values
    tag 29			return values
      JUMPDEST 			return values
      POP 			return values
      POP 			return values
      POP 			return values
      POP 			return values
      POP 			return values
      SWAP1 			return values
      POP 			return values
      SWAP1 			function getValues() public vi...
      JUMP [out]			function getValues() public vi...
    tag 18			function getFunderList() publi...
      JUMPDEST 			function getFunderList() publi...
      PUSH 60			address[] memory
      PUSH 4			funderList
      DUP1 			return funderList
      SLOAD 			return funderList
      DUP1 			return funderList
      PUSH 20			return funderList
      MUL 			return funderList
      PUSH 20			return funderList
      ADD 			return funderList
      PUSH 40			return funderList
      MLOAD 			return funderList
      SWAP1 			return funderList
      DUP2 			return funderList
      ADD 			return funderList
      PUSH 40			return funderList
      MSTORE 			return funderList
      DUP1 			return funderList
      SWAP3 			return funderList
      SWAP2 			return funderList
      SWAP1 			return funderList
      DUP2 			return funderList
      DUP2 			return funderList
      MSTORE 			return funderList
      PUSH 20			return funderList
      ADD 			return funderList
      DUP3 			return funderList
      DUP1 			return funderList
      SLOAD 			return funderList
      DUP1 			return funderList
      ISZERO 			return funderList
      PUSH [tag] 32			return funderList
      JUMPI 			return funderList
      PUSH 20			return funderList
      MUL 			return funderList
      DUP3 			return funderList
      ADD 			return funderList
      SWAP2 			return funderList
      SWAP1 			return funderList
      PUSH 0			return funderList
      MSTORE 			return funderList
      PUSH 20			return funderList
      PUSH 0			return funderList
      KECCAK256 			return funderList
      SWAP1 			return funderList
    tag 33			return funderList
      JUMPDEST 			return funderList
      DUP2 			return funderList
      PUSH 0			return funderList
      SWAP1 			return funderList
      SLOAD 			return funderList
      SWAP1 			return funderList
      PUSH 100			return funderList
      EXP 			return funderList
      SWAP1 			return funderList
      DIV 			return funderList
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			return funderList
      AND 			return funderList
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			return funderList
      AND 			return funderList
      DUP2 			return funderList
      MSTORE 			return funderList
      PUSH 20			return funderList
      ADD 			return funderList
      SWAP1 			return funderList
      PUSH 1			return funderList
      ADD 			return funderList
      SWAP1 			return funderList
      DUP1 			return funderList
      DUP4 			return funderList
      GT 			return funderList
      PUSH [tag] 33			return funderList
      JUMPI 			return funderList
    tag 32			return funderList
      JUMPDEST 			return funderList
      POP 			return funderList
      POP 			return funderList
      POP 			return funderList
      POP 			return funderList
      POP 			return funderList
      SWAP1 			return funderList
      POP 			return funderList
      SWAP1 			function getFunderList() publi...
      JUMP [out]			function getFunderList() publi...
    tag 23			function fund() external payab...
      JUMPDEST 			function fund() external payab...
      PUSH 0			finishTime
      SLOAD 			finishTime
      TIMESTAMP 			now
      LT 			now < finishTime
      PUSH [tag] 35			require(now < finishTime,"Fund...
      JUMPI 			require(now < finishTime,"Fund...
      PUSH 40			require(now < finishTime,"Fund...
      MLOAD 			require(now < finishTime,"Fund...
      PUSH 8C379A000000000000000000000000000000000000000000000000000000000			require(now < finishTime,"Fund...
      DUP2 			require(now < finishTime,"Fund...
      MSTORE 			require(now < finishTime,"Fund...
      PUSH 4			require(now < finishTime,"Fund...
      ADD 			require(now < finishTime,"Fund...
      DUP1 			require(now < finishTime,"Fund...
      DUP1 			require(now < finishTime,"Fund...
      PUSH 20			require(now < finishTime,"Fund...
      ADD 			require(now < finishTime,"Fund...
      DUP3 			require(now < finishTime,"Fund...
      DUP2 			require(now < finishTime,"Fund...
      SUB 			require(now < finishTime,"Fund...
      DUP3 			require(now < finishTime,"Fund...
      MSTORE 			require(now < finishTime,"Fund...
      PUSH 16			require(now < finishTime,"Fund...
      DUP2 			require(now < finishTime,"Fund...
      MSTORE 			require(now < finishTime,"Fund...
      PUSH 20			require(now < finishTime,"Fund...
      ADD 			require(now < finishTime,"Fund...
      DUP1 			require(now < finishTime,"Fund...
      PUSH 46756E64696E6720706572696F64206973206F76657200000000000000000000			require(now < finishTime,"Fund...
      DUP2 			require(now < finishTime,"Fund...
      MSTORE 			require(now < finishTime,"Fund...
      POP 			require(now < finishTime,"Fund...
      PUSH 20			require(now < finishTime,"Fund...
      ADD 			require(now < finishTime,"Fund...
      SWAP2 			require(now < finishTime,"Fund...
      POP 			require(now < finishTime,"Fund...
      POP 			require(now < finishTime,"Fund...
      PUSH 40			require(now < finishTime,"Fund...
      MLOAD 			require(now < finishTime,"Fund...
      DUP1 			require(now < finishTime,"Fund...
      SWAP2 			require(now < finishTime,"Fund...
      SUB 			require(now < finishTime,"Fund...
      SWAP1 			require(now < finishTime,"Fund...
      REVERT 			require(now < finishTime,"Fund...
    tag 35			require(now < finishTime,"Fund...
      JUMPDEST 			require(now < finishTime,"Fund...
      PUSH 0			0
      CALLVALUE 			msg.value
      GT 			msg.value > 0
      PUSH [tag] 36			require(msg.value > 0,"There i...
      JUMPI 			require(msg.value > 0,"There i...
      PUSH 40			require(msg.value > 0,"There i...
      MLOAD 			require(msg.value > 0,"There i...
      PUSH 8C379A000000000000000000000000000000000000000000000000000000000			require(msg.value > 0,"There i...
      DUP2 			require(msg.value > 0,"There i...
      MSTORE 			require(msg.value > 0,"There i...
      PUSH 4			require(msg.value > 0,"There i...
      ADD 			require(msg.value > 0,"There i...
      DUP1 			require(msg.value > 0,"There i...
      DUP1 			require(msg.value > 0,"There i...
      PUSH 20			require(msg.value > 0,"There i...
      ADD 			require(msg.value > 0,"There i...
      DUP3 			require(msg.value > 0,"There i...
      DUP2 			require(msg.value > 0,"There i...
      SUB 			require(msg.value > 0,"There i...
      DUP3 			require(msg.value > 0,"There i...
      MSTORE 			require(msg.value > 0,"There i...
      PUSH 15			require(msg.value > 0,"There i...
      DUP2 			require(msg.value > 0,"There i...
      MSTORE 			require(msg.value > 0,"There i...
      PUSH 20			require(msg.value > 0,"There i...
      ADD 			require(msg.value > 0,"There i...
      DUP1 			require(msg.value > 0,"There i...
      PUSH 5468657265206973206E6F206269642076616C75650000000000000000000000			require(msg.value > 0,"There i...
      DUP2 			require(msg.value > 0,"There i...
      MSTORE 			require(msg.value > 0,"There i...
      POP 			require(msg.value > 0,"There i...
      PUSH 20			require(msg.value > 0,"There i...
      ADD 			require(msg.value > 0,"There i...
      SWAP2 			require(msg.value > 0,"There i...
      POP 			require(msg.value > 0,"There i...
      POP 			require(msg.value > 0,"There i...
      PUSH 40			require(msg.value > 0,"There i...
      MLOAD 			require(msg.value > 0,"There i...
      DUP1 			require(msg.value > 0,"There i...
      SWAP2 			require(msg.value > 0,"There i...
      SUB 			require(msg.value > 0,"There i...
      SWAP1 			require(msg.value > 0,"There i...
      REVERT 			require(msg.value > 0,"There i...
    tag 36			require(msg.value > 0,"There i...
      JUMPDEST 			require(msg.value > 0,"There i...
      PUSH 0			0
      PUSH 7			indexes
      PUSH 0			indexes[msg.value]
      CALLVALUE 			msg.value
      DUP2 			indexes[msg.value]
      MSTORE 			indexes[msg.value]
      PUSH 20			indexes[msg.value]
      ADD 			indexes[msg.value]
      SWAP1 			indexes[msg.value]
      DUP2 			indexes[msg.value]
      MSTORE 			indexes[msg.value]
      PUSH 20			indexes[msg.value]
      ADD 			indexes[msg.value]
      PUSH 0			indexes[msg.value]
      KECCAK256 			indexes[msg.value]
      SLOAD 			indexes[msg.value]
      EQ 			indexes[msg.value] != 0
      ISZERO 			indexes[msg.value] != 0
      PUSH [tag] 37			require(indexes[msg.value] != ...
      JUMPI 			require(indexes[msg.value] != ...
      PUSH 40			require(indexes[msg.value] != ...
      MLOAD 			require(indexes[msg.value] != ...
      PUSH 8C379A000000000000000000000000000000000000000000000000000000000			require(indexes[msg.value] != ...
      DUP2 			require(indexes[msg.value] != ...
      MSTORE 			require(indexes[msg.value] != ...
      PUSH 4			require(indexes[msg.value] != ...
      ADD 			require(indexes[msg.value] != ...
      DUP1 			require(indexes[msg.value] != ...
      DUP1 			require(indexes[msg.value] != ...
      PUSH 20			require(indexes[msg.value] != ...
      ADD 			require(indexes[msg.value] != ...
      DUP3 			require(indexes[msg.value] != ...
      DUP2 			require(indexes[msg.value] != ...
      SUB 			require(indexes[msg.value] != ...
      DUP3 			require(indexes[msg.value] != ...
      MSTORE 			require(indexes[msg.value] != ...
      PUSH 3C			require(indexes[msg.value] != ...
      DUP2 			require(indexes[msg.value] != ...
      MSTORE 			require(indexes[msg.value] != ...
      PUSH 20			require(indexes[msg.value] != ...
      ADD 			require(indexes[msg.value] != ...
      DUP1 			require(indexes[msg.value] != ...
      PUSH data A975C1EDE1A28DC16D489FBD9E39B3FCE4EEFF3403675ACE5FA47851A7557893			require(indexes[msg.value] != ...
      PUSH 3C			require(indexes[msg.value] != ...
      SWAP2 			require(indexes[msg.value] != ...
      CODECOPY 			require(indexes[msg.value] != ...
      PUSH 40			require(indexes[msg.value] != ...
      ADD 			require(indexes[msg.value] != ...
      SWAP2 			require(indexes[msg.value] != ...
      POP 			require(indexes[msg.value] != ...
      POP 			require(indexes[msg.value] != ...
      PUSH 40			require(indexes[msg.value] != ...
      MLOAD 			require(indexes[msg.value] != ...
      DUP1 			require(indexes[msg.value] != ...
      SWAP2 			require(indexes[msg.value] != ...
      SUB 			require(indexes[msg.value] != ...
      SWAP1 			require(indexes[msg.value] != ...
      REVERT 			require(indexes[msg.value] != ...
    tag 37			require(indexes[msg.value] != ...
      JUMPDEST 			require(indexes[msg.value] != ...
      PUSH 0			0
      PUSH 6			addressToValue
      PUSH 0			addressToValue[msg.sender]
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			addressToValue[msg.sender]
      AND 			addressToValue[msg.sender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			addressToValue[msg.sender]
      AND 			addressToValue[msg.sender]
      DUP2 			addressToValue[msg.sender]
      MSTORE 			addressToValue[msg.sender]
      PUSH 20			addressToValue[msg.sender]
      ADD 			addressToValue[msg.sender]
      SWAP1 			addressToValue[msg.sender]
      DUP2 			addressToValue[msg.sender]
      MSTORE 			addressToValue[msg.sender]
      PUSH 20			addressToValue[msg.sender]
      ADD 			addressToValue[msg.sender]
      PUSH 0			addressToValue[msg.sender]
      KECCAK256 			addressToValue[msg.sender]
      PUSH 0			addressToValue[msg.sender].fun...
      ADD 			addressToValue[msg.sender].fun...
      SLOAD 			addressToValue[msg.sender].fun...
      EQ 			addressToValue[msg.sender].fun...
      ISZERO 			if(addressToValue[msg.sender]....
      PUSH [tag] 38			if(addressToValue[msg.sender]....
      JUMPI 			if(addressToValue[msg.sender]....
      PUSH 5			allFunders
      CALLER 			msg.sender
      SWAP1 			allFunders.push(msg.sender)
      DUP1 			allFunders.push(msg.sender)
      PUSH 1			t
      DUP2 			\n\r\n
      SLOAD 			.6.0;\r\n\r\nc
      ADD 			2 <0.6.0;\r\n\r\ncontr
      DUP1 			{\r\n    \r\n 
      DUP3 			ndi
      SSTORE 			crowdfunding{\r\n    \r\n  
      DUP1 			Struct\r\n  
      SWAP2 			Funder Struct\r\n  
      POP 			Funder Struct\r\n  
      POP 			pragma solidity >=0.4.22 <0.6....
      SWAP1 			allFunders.push(msg.sender)
      PUSH 1			allFunders.push(msg.sender)
      DUP3 			allFunders.push(msg.sender)
      SUB 			allFunders.push(msg.sender)
      SWAP1 			allFunders.push(msg.sender)
      PUSH 0			allFunders.push(msg.sender)
      MSTORE 			allFunders.push(msg.sender)
      PUSH 20			allFunders.push(msg.sender)
      PUSH 0			allFunders.push(msg.sender)
      KECCAK256 			allFunders.push(msg.sender)
      ADD 			allFunders.push(msg.sender)
      PUSH 0			allFunders.push(msg.sender)
      SWAP1 			allFunders.push(msg.sender)
      SWAP2 			allFunders.push(msg.sender)
      SWAP3 			allFunders.push(msg.sender)
      SWAP1 			allFunders.push(msg.sender)
      SWAP2 			allFunders.push(msg.sender)
      SWAP1 			allFunders.push(msg.sender)
      SWAP2 			allFunders.push(msg.sender)
      PUSH 100			allFunders.push(msg.sender)
      EXP 			allFunders.push(msg.sender)
      DUP2 			allFunders.push(msg.sender)
      SLOAD 			allFunders.push(msg.sender)
      DUP2 			allFunders.push(msg.sender)
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allFunders.push(msg.sender)
      MUL 			allFunders.push(msg.sender)
      NOT 			allFunders.push(msg.sender)
      AND 			allFunders.push(msg.sender)
      SWAP1 			allFunders.push(msg.sender)
      DUP4 			allFunders.push(msg.sender)
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allFunders.push(msg.sender)
      AND 			allFunders.push(msg.sender)
      MUL 			allFunders.push(msg.sender)
      OR 			allFunders.push(msg.sender)
      SWAP1 			allFunders.push(msg.sender)
      SSTORE 			allFunders.push(msg.sender)
      POP 			allFunders.push(msg.sender)
      POP 			allFunders.push(msg.sender)
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			-1
      PUSH 7			indexes
      PUSH 0			indexes[msg.value]
      CALLVALUE 			msg.value
      DUP2 			indexes[msg.value]
      MSTORE 			indexes[msg.value]
      PUSH 20			indexes[msg.value]
      ADD 			indexes[msg.value]
      SWAP1 			indexes[msg.value]
      DUP2 			indexes[msg.value]
      MSTORE 			indexes[msg.value]
      PUSH 20			indexes[msg.value]
      ADD 			indexes[msg.value]
      PUSH 0			indexes[msg.value]
      KECCAK256 			indexes[msg.value]
      SLOAD 			indexes[msg.value]
      EQ 			indexes[msg.value] == -1
      ISZERO 			if(indexes[msg.value] == -1){\...
      PUSH [tag] 40			if(indexes[msg.value] == -1){\...
      JUMPI 			if(indexes[msg.value] == -1){\...
      PUSH 0			0
      PUSH 7			indexes
      PUSH 0			indexes[msg.value]
      CALLVALUE 			msg.value
      DUP2 			indexes[msg.value]
      MSTORE 			indexes[msg.value]
      PUSH 20			indexes[msg.value]
      ADD 			indexes[msg.value]
      SWAP1 			indexes[msg.value]
      DUP2 			indexes[msg.value]
      MSTORE 			indexes[msg.value]
      PUSH 20			indexes[msg.value]
      ADD 			indexes[msg.value]
      PUSH 0			indexes[msg.value]
      KECCAK256 			indexes[msg.value]
      DUP2 			indexes[msg.value] = 0
      SWAP1 			indexes[msg.value] = 0
      SSTORE 			indexes[msg.value] = 0
      POP 			indexes[msg.value] = 0
    tag 40			if(indexes[msg.value] == -1){\...
      JUMPDEST 			if(indexes[msg.value] == -1){\...
      PUSH 7			indexes
      PUSH 0			indexes[msg.value]
      CALLVALUE 			msg.value
      DUP2 			indexes[msg.value]
      MSTORE 			indexes[msg.value]
      PUSH 20			indexes[msg.value]
      ADD 			indexes[msg.value]
      SWAP1 			indexes[msg.value]
      DUP2 			indexes[msg.value]
      MSTORE 			indexes[msg.value]
      PUSH 20			indexes[msg.value]
      ADD 			indexes[msg.value]
      PUSH 0			indexes[msg.value]
      KECCAK256 			indexes[msg.value]
      PUSH 0			indexes[msg.value]
      DUP2 			indexes[msg.value]++
      SLOAD 			indexes[msg.value]++
      DUP1 			indexes[msg.value]++
      SWAP3 			indexes[msg.value]++
      SWAP2 			indexes[msg.value]++
      SWAP1 			indexes[msg.value]++
      PUSH 1			indexes[msg.value]++
      ADD 			indexes[msg.value]++
      SWAP2 			indexes[msg.value]++
      SWAP1 			indexes[msg.value]++
      POP 			indexes[msg.value]++
      SSTORE 			indexes[msg.value]++
      POP 			indexes[msg.value]++
      CALLVALUE 			msg.value
      PUSH 6			addressToValue
      PUSH 0			addressToValue[msg.sender]
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			addressToValue[msg.sender]
      AND 			addressToValue[msg.sender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			addressToValue[msg.sender]
      AND 			addressToValue[msg.sender]
      DUP2 			addressToValue[msg.sender]
      MSTORE 			addressToValue[msg.sender]
      PUSH 20			addressToValue[msg.sender]
      ADD 			addressToValue[msg.sender]
      SWAP1 			addressToValue[msg.sender]
      DUP2 			addressToValue[msg.sender]
      MSTORE 			addressToValue[msg.sender]
      PUSH 20			addressToValue[msg.sender]
      ADD 			addressToValue[msg.sender]
      PUSH 0			addressToValue[msg.sender]
      KECCAK256 			addressToValue[msg.sender]
      PUSH 0			addressToValue[msg.sender].fun...
      ADD 			addressToValue[msg.sender].fun...
      DUP2 			addressToValue[msg.sender].fun...
      SWAP1 			addressToValue[msg.sender].fun...
      SSTORE 			addressToValue[msg.sender].fun...
      POP 			addressToValue[msg.sender].fun...
      PUSH [tag] 41			if(addressToValue[msg.sender]....
      JUMP 			if(addressToValue[msg.sender]....
    tag 38			if(addressToValue[msg.sender]....
      JUMPDEST 			if(addressToValue[msg.sender]....
      PUSH 40			revert("Currently no option to...
      MLOAD 			revert("Currently no option to...
      PUSH 8C379A000000000000000000000000000000000000000000000000000000000			revert("Currently no option to...
      DUP2 			revert("Currently no option to...
      MSTORE 			revert("Currently no option to...
      PUSH 4			revert("Currently no option to...
      ADD 			revert("Currently no option to...
      DUP1 			revert("Currently no option to...
      DUP1 			revert("Currently no option to...
      PUSH 20			revert("Currently no option to...
      ADD 			revert("Currently no option to...
      DUP3 			revert("Currently no option to...
      DUP2 			revert("Currently no option to...
      SUB 			revert("Currently no option to...
      DUP3 			revert("Currently no option to...
      MSTORE 			revert("Currently no option to...
      PUSH 23			revert("Currently no option to...
      DUP2 			revert("Currently no option to...
      MSTORE 			revert("Currently no option to...
      PUSH 20			revert("Currently no option to...
      ADD 			revert("Currently no option to...
      DUP1 			revert("Currently no option to...
      PUSH data 5200C2D44EA95904101C5B019B6FC3F66E02DD39E47D86D4709D86BFC7B3BE02			revert("Currently no option to...
      PUSH 23			revert("Currently no option to...
      SWAP2 			revert("Currently no option to...
      CODECOPY 			revert("Currently no option to...
      PUSH 40			revert("Currently no option to...
      ADD 			revert("Currently no option to...
      SWAP2 			revert("Currently no option to...
      POP 			revert("Currently no option to...
      POP 			revert("Currently no option to...
      PUSH 40			revert("Currently no option to...
      MLOAD 			revert("Currently no option to...
      DUP1 			revert("Currently no option to...
      SWAP2 			revert("Currently no option to...
      SUB 			revert("Currently no option to...
      SWAP1 			revert("Currently no option to...
      REVERT 			revert("Currently no option to...
    tag 41			if(addressToValue[msg.sender]....
      JUMPDEST 			if(addressToValue[msg.sender]....
      JUMP [out]			function fund() external payab...
    tag 26			function finishFunding() publi...
      JUMPDEST 			function finishFunding() publi...
      PUSH 0			finishTime
      SLOAD 			finishTime
      TIMESTAMP 			now
      GT 			now > finishTime
      PUSH [tag] 43			require(now > finishTime, "Fun...
      JUMPI 			require(now > finishTime, "Fun...
      PUSH 40			require(now > finishTime, "Fun...
      MLOAD 			require(now > finishTime, "Fun...
      PUSH 8C379A000000000000000000000000000000000000000000000000000000000			require(now > finishTime, "Fun...
      DUP2 			require(now > finishTime, "Fun...
      MSTORE 			require(now > finishTime, "Fun...
      PUSH 4			require(now > finishTime, "Fun...
      ADD 			require(now > finishTime, "Fun...
      DUP1 			require(now > finishTime, "Fun...
      DUP1 			require(now > finishTime, "Fun...
      PUSH 20			require(now > finishTime, "Fun...
      ADD 			require(now > finishTime, "Fun...
      DUP3 			require(now > finishTime, "Fun...
      DUP2 			require(now > finishTime, "Fun...
      SUB 			require(now > finishTime, "Fun...
      DUP3 			require(now > finishTime, "Fun...
      MSTORE 			require(now > finishTime, "Fun...
      PUSH 1B			require(now > finishTime, "Fun...
      DUP2 			require(now > finishTime, "Fun...
      MSTORE 			require(now > finishTime, "Fun...
      PUSH 20			require(now > finishTime, "Fun...
      ADD 			require(now > finishTime, "Fun...
      DUP1 			require(now > finishTime, "Fun...
      PUSH 46756E64696E6720706572696F64206973206E6F7420646F6E652E0000000000			require(now > finishTime, "Fun...
      DUP2 			require(now > finishTime, "Fun...
      MSTORE 			require(now > finishTime, "Fun...
      POP 			require(now > finishTime, "Fun...
      PUSH 20			require(now > finishTime, "Fun...
      ADD 			require(now > finishTime, "Fun...
      SWAP2 			require(now > finishTime, "Fun...
      POP 			require(now > finishTime, "Fun...
      POP 			require(now > finishTime, "Fun...
      PUSH 40			require(now > finishTime, "Fun...
      MLOAD 			require(now > finishTime, "Fun...
      DUP1 			require(now > finishTime, "Fun...
      SWAP2 			require(now > finishTime, "Fun...
      SUB 			require(now > finishTime, "Fun...
      SWAP1 			require(now > finishTime, "Fun...
      REVERT 			require(now > finishTime, "Fun...
    tag 43			require(now > finishTime, "Fun...
      JUMPDEST 			require(now > finishTime, "Fun...
      PUSH 0			int finalValue
      DUP1 			int price
      PUSH 0			uint trueLength
      PUSH 5			allFunders
      DUP1 			allFunders.length
      SLOAD 			allFunders.length
      SWAP1 			allFunders.length
      POP 			allFunders.length
      SWAP1 			uint trueLength = allFunders.l...
      POP 			uint trueLength = allFunders.l...
      PUSH 0			uint i
      DUP1 			0
      SWAP1 			uint i = 0
      POP 			uint i = 0
    tag 44			for(uint i = 0;i<values.length...
      JUMPDEST 			for(uint i = 0;i<values.length...
      PUSH 2			values
      DUP1 			values.length
      SLOAD 			values.length
      SWAP1 			values.length
      POP 			values.length
      DUP2 			i
      LT 			i<values.length
      ISZERO 			for(uint i = 0;i<values.length...
      PUSH [tag] 45			for(uint i = 0;i<values.length...
      JUMPI 			for(uint i = 0;i<values.length...
      PUSH 1			goal
      SLOAD 			goal
      PUSH 2			values
      DUP3 			i
      DUP2 			values[i]
      SLOAD 			values[i]
      DUP2 			values[i]
      LT 			values[i]
      PUSH [tag] 47			values[i]
      JUMPI 			values[i]
      INVALID 			values[i]
    tag 47			values[i]
      JUMPDEST 			values[i]
      SWAP1 			values[i]
      PUSH 0			values[i]
      MSTORE 			values[i]
      PUSH 20			values[i]
      PUSH 0			values[i]
      KECCAK256 			values[i]
      ADD 			values[i]
      SLOAD 			values[i]
      PUSH 7			indexes
      PUSH 0			indexes[values[i]]
      PUSH 2			values
      DUP6 			i
      DUP2 			values[i]
      SLOAD 			values[i]
      DUP2 			values[i]
      LT 			values[i]
      PUSH [tag] 49			values[i]
      JUMPI 			values[i]
      INVALID 			values[i]
    tag 49			values[i]
      JUMPDEST 			values[i]
      SWAP1 			values[i]
      PUSH 0			values[i]
      MSTORE 			values[i]
      PUSH 20			values[i]
      PUSH 0			values[i]
      KECCAK256 			values[i]
      ADD 			values[i]
      SLOAD 			values[i]
      DUP2 			indexes[values[i]]
      MSTORE 			indexes[values[i]]
      PUSH 20			indexes[values[i]]
      ADD 			indexes[values[i]]
      SWAP1 			indexes[values[i]]
      DUP2 			indexes[values[i]]
      MSTORE 			indexes[values[i]]
      PUSH 20			indexes[values[i]]
      ADD 			indexes[values[i]]
      PUSH 0			indexes[values[i]]
      KECCAK256 			indexes[values[i]]
      SLOAD 			indexes[values[i]]
      MUL 			indexes[values[i]]*int(values[...
      SGT 			indexes[values[i]]*int(values[...
      ISZERO 			if(indexes[values[i]]*int(valu...
      PUSH [tag] 51			if(indexes[values[i]]*int(valu...
      JUMPI 			if(indexes[values[i]]*int(valu...
      PUSH 2			values
      DUP2 			i
      DUP2 			values[i]
      SLOAD 			values[i]
      DUP2 			values[i]
      LT 			values[i]
      PUSH [tag] 52			values[i]
      JUMPI 			values[i]
      INVALID 			values[i]
    tag 52			values[i]
      JUMPDEST 			values[i]
      SWAP1 			values[i]
      PUSH 0			values[i]
      MSTORE 			values[i]
      PUSH 20			values[i]
      PUSH 0			values[i]
      KECCAK256 			values[i]
      ADD 			values[i]
      SLOAD 			values[i]
      SWAP4 			finalValue = int(values[i])
      POP 			finalValue = int(values[i])
      PUSH [tag] 45			break
      JUMP 			break
    tag 51			if(indexes[values[i]]*int(valu...
      JUMPDEST 			if(indexes[values[i]]*int(valu...
      DUP1 			i++
      DUP1 			i++
      PUSH 1			i++
      ADD 			i++
      SWAP2 			i++
      POP 			i++
      POP 			i++
      PUSH [tag] 44			for(uint i = 0;i<values.length...
      JUMP 			for(uint i = 0;i<values.length...
    tag 45			for(uint i = 0;i<values.length...
      JUMPDEST 			for(uint i = 0;i<values.length...
      POP 			for(uint i = 0;i<values.length...
      PUSH 0			0
      DUP4 			finalValue
      EQ 			finalValue == 0
      ISZERO 			if(finalValue == 0){\r\n      ...
      PUSH [tag] 54			if(finalValue == 0){\r\n      ...
      JUMPI 			if(finalValue == 0){\r\n      ...
      PUSH 0			uint a
      DUP1 			0
      SWAP1 			uint a = 0
      POP 			uint a = 0
    tag 55			for(uint a = 0; a<allFunders.l...
      JUMPDEST 			for(uint a = 0; a<allFunders.l...
      PUSH 5			allFunders
      DUP1 			allFunders.length
      SLOAD 			allFunders.length
      SWAP1 			allFunders.length
      POP 			allFunders.length
      DUP2 			a
      LT 			a<allFunders.length
      ISZERO 			for(uint a = 0; a<allFunders.l...
      PUSH [tag] 56			for(uint a = 0; a<allFunders.l...
      JUMPI 			for(uint a = 0; a<allFunders.l...
      PUSH 5			allFunders
      DUP2 			a
      DUP2 			allFunders[a]
      SLOAD 			allFunders[a]
      DUP2 			allFunders[a]
      LT 			allFunders[a]
      PUSH [tag] 58			allFunders[a]
      JUMPI 			allFunders[a]
      INVALID 			allFunders[a]
    tag 58			allFunders[a]
      JUMPDEST 			allFunders[a]
      SWAP1 			allFunders[a]
      PUSH 0			allFunders[a]
      MSTORE 			allFunders[a]
      PUSH 20			allFunders[a]
      PUSH 0			allFunders[a]
      KECCAK256 			allFunders[a]
      ADD 			allFunders[a]
      PUSH 0			allFunders[a]
      SWAP1 			allFunders[a]
      SLOAD 			allFunders[a]
      SWAP1 			allFunders[a]
      PUSH 100			allFunders[a]
      EXP 			allFunders[a]
      SWAP1 			allFunders[a]
      DIV 			allFunders[a]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allFunders[a]
      AND 			allFunders[a]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allFunders[a].transfer
      AND 			allFunders[a].transfer
      PUSH 8FC			allFunders[a].transfer(address...
      PUSH 6			addressToValue
      PUSH 0			addressToValue[allFunders[a]]
      PUSH 5			allFunders
      DUP6 			a
      DUP2 			allFunders[a]
      SLOAD 			allFunders[a]
      DUP2 			allFunders[a]
      LT 			allFunders[a]
      PUSH [tag] 60			allFunders[a]
      JUMPI 			allFunders[a]
      INVALID 			allFunders[a]
    tag 60			allFunders[a]
      JUMPDEST 			allFunders[a]
      SWAP1 			allFunders[a]
      PUSH 0			allFunders[a]
      MSTORE 			allFunders[a]
      PUSH 20			allFunders[a]
      PUSH 0			allFunders[a]
      KECCAK256 			allFunders[a]
      ADD 			allFunders[a]
      PUSH 0			allFunders[a]
      SWAP1 			allFunders[a]
      SLOAD 			allFunders[a]
      SWAP1 			allFunders[a]
      PUSH 100			allFunders[a]
      EXP 			allFunders[a]
      SWAP1 			allFunders[a]
      DIV 			allFunders[a]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allFunders[a]
      AND 			allFunders[a]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			addressToValue[allFunders[a]]
      AND 			addressToValue[allFunders[a]]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			addressToValue[allFunders[a]]
      AND 			addressToValue[allFunders[a]]
      DUP2 			addressToValue[allFunders[a]]
      MSTORE 			addressToValue[allFunders[a]]
      PUSH 20			addressToValue[allFunders[a]]
      ADD 			addressToValue[allFunders[a]]
      SWAP1 			addressToValue[allFunders[a]]
      DUP2 			addressToValue[allFunders[a]]
      MSTORE 			addressToValue[allFunders[a]]
      PUSH 20			addressToValue[allFunders[a]]
      ADD 			addressToValue[allFunders[a]]
      PUSH 0			addressToValue[allFunders[a]]
      KECCAK256 			addressToValue[allFunders[a]]
      PUSH 0			addressToValue[allFunders[a]]....
      ADD 			addressToValue[allFunders[a]]....
      SLOAD 			addressToValue[allFunders[a]]....
      SWAP1 			allFunders[a].transfer(address...
      DUP2 			allFunders[a].transfer(address...
      ISZERO 			allFunders[a].transfer(address...
      MUL 			allFunders[a].transfer(address...
      SWAP1 			allFunders[a].transfer(address...
      PUSH 40			allFunders[a].transfer(address...
      MLOAD 			allFunders[a].transfer(address...
      PUSH 0			allFunders[a].transfer(address...
      PUSH 40			allFunders[a].transfer(address...
      MLOAD 			allFunders[a].transfer(address...
      DUP1 			allFunders[a].transfer(address...
      DUP4 			allFunders[a].transfer(address...
      SUB 			allFunders[a].transfer(address...
      DUP2 			allFunders[a].transfer(address...
      DUP6 			allFunders[a].transfer(address...
      DUP9 			allFunders[a].transfer(address...
      DUP9 			allFunders[a].transfer(address...
      CALL 			allFunders[a].transfer(address...
      SWAP4 			allFunders[a].transfer(address...
      POP 			allFunders[a].transfer(address...
      POP 			allFunders[a].transfer(address...
      POP 			allFunders[a].transfer(address...
      POP 			allFunders[a].transfer(address...
      ISZERO 			allFunders[a].transfer(address...
      DUP1 			olidity >
      ISZERO 			a 
      PUSH [tag] 62			a 
      JUMPI 			a 
      RETURNDATASIZE 			crowdfunding{\r\n 
      PUSH 0			c
      DUP1 			t
      RETURNDATACOPY 			 <0.6.0;\r\n\r\ncontract crowd...
      RETURNDATASIZE 			r Struct\r\n    st
      PUSH 0			n
      REVERT 			   //Funder Struct\r\n    str
    tag 62			a 
      JUMPDEST 			a 
      POP 			allFunders[a].transfer(address...
      DUP1 			a++
      DUP1 			a++
      PUSH 1			a++
      ADD 			a++
      SWAP2 			a++
      POP 			a++
      POP 			a++
      PUSH [tag] 55			for(uint a = 0; a<allFunders.l...
      JUMP 			for(uint a = 0; a<allFunders.l...
    tag 56			for(uint a = 0; a<allFunders.l...
      JUMPDEST 			for(uint a = 0; a<allFunders.l...
      POP 			for(uint a = 0; a<allFunders.l...
      POP 			return;
      POP 			return;
      POP 			return;
      PUSH [tag] 42			return;
      JUMP 			return;
    tag 54			if(finalValue == 0){\r\n      ...
      JUMPDEST 			if(finalValue == 0){\r\n      ...
      PUSH 2			values
      PUSH 0			0
      DUP2 			values[0]
      SLOAD 			values[0]
      DUP2 			values[0]
      LT 			values[0]
      PUSH [tag] 64			values[0]
      JUMPI 			values[0]
      INVALID 			values[0]
    tag 64			values[0]
      JUMPDEST 			values[0]
      SWAP1 			values[0]
      PUSH 0			values[0]
      MSTORE 			values[0]
      PUSH 20			values[0]
      PUSH 0			values[0]
      KECCAK256 			values[0]
      ADD 			values[0]
      SLOAD 			values[0]
      DUP4 			finalValue
      EQ 			finalValue != int(values[0])
      PUSH [tag] 66			if(finalValue != int(values[0]...
      JUMPI 			if(finalValue != int(values[0]...
      PUSH 0			uint a
      DUP1 			0
      SWAP1 			uint a = 0
      POP 			uint a = 0
    tag 67			for(uint a = 0; a<allFunders.l...
      JUMPDEST 			for(uint a = 0; a<allFunders.l...
      PUSH 5			allFunders
      DUP1 			allFunders.length
      SLOAD 			allFunders.length
      SWAP1 			allFunders.length
      POP 			allFunders.length
      DUP2 			a
      LT 			a<allFunders.length
      ISZERO 			for(uint a = 0; a<allFunders.l...
      PUSH [tag] 68			for(uint a = 0; a<allFunders.l...
      JUMPI 			for(uint a = 0; a<allFunders.l...
      DUP4 			finalValue
      PUSH 6			addressToValue
      PUSH 0			addressToValue[allFunders[a]]
      PUSH 5			allFunders
      DUP5 			a
      DUP2 			allFunders[a]
      SLOAD 			allFunders[a]
      DUP2 			allFunders[a]
      LT 			allFunders[a]
      PUSH [tag] 70			allFunders[a]
      JUMPI 			allFunders[a]
      INVALID 			allFunders[a]
    tag 70			allFunders[a]
      JUMPDEST 			allFunders[a]
      SWAP1 			allFunders[a]
      PUSH 0			allFunders[a]
      MSTORE 			allFunders[a]
      PUSH 20			allFunders[a]
      PUSH 0			allFunders[a]
      KECCAK256 			allFunders[a]
      ADD 			allFunders[a]
      PUSH 0			allFunders[a]
      SWAP1 			allFunders[a]
      SLOAD 			allFunders[a]
      SWAP1 			allFunders[a]
      PUSH 100			allFunders[a]
      EXP 			allFunders[a]
      SWAP1 			allFunders[a]
      DIV 			allFunders[a]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allFunders[a]
      AND 			allFunders[a]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			addressToValue[allFunders[a]]
      AND 			addressToValue[allFunders[a]]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			addressToValue[allFunders[a]]
      AND 			addressToValue[allFunders[a]]
      DUP2 			addressToValue[allFunders[a]]
      MSTORE 			addressToValue[allFunders[a]]
      PUSH 20			addressToValue[allFunders[a]]
      ADD 			addressToValue[allFunders[a]]
      SWAP1 			addressToValue[allFunders[a]]
      DUP2 			addressToValue[allFunders[a]]
      MSTORE 			addressToValue[allFunders[a]]
      PUSH 20			addressToValue[allFunders[a]]
      ADD 			addressToValue[allFunders[a]]
      PUSH 0			addressToValue[allFunders[a]]
      KECCAK256 			addressToValue[allFunders[a]]
      PUSH 0			addressToValue[allFunders[a]]....
      ADD 			addressToValue[allFunders[a]]....
      SLOAD 			addressToValue[allFunders[a]]....
      LT 			addressToValue[allFunders[a]]....
      ISZERO 			if(addressToValue[allFunders[a...
      PUSH [tag] 72			if(addressToValue[allFunders[a...
      JUMPI 			if(addressToValue[allFunders[a...
      PUSH 5			allFunders
      DUP2 			a
      DUP2 			allFunders[a]
      SLOAD 			allFunders[a]
      DUP2 			allFunders[a]
      LT 			allFunders[a]
      PUSH [tag] 73			allFunders[a]
      JUMPI 			allFunders[a]
      INVALID 			allFunders[a]
    tag 73			allFunders[a]
      JUMPDEST 			allFunders[a]
      SWAP1 			allFunders[a]
      PUSH 0			allFunders[a]
      MSTORE 			allFunders[a]
      PUSH 20			allFunders[a]
      PUSH 0			allFunders[a]
      KECCAK256 			allFunders[a]
      ADD 			allFunders[a]
      PUSH 0			allFunders[a]
      SWAP1 			allFunders[a]
      SLOAD 			allFunders[a]
      SWAP1 			allFunders[a]
      PUSH 100			allFunders[a]
      EXP 			allFunders[a]
      SWAP1 			allFunders[a]
      DIV 			allFunders[a]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allFunders[a]
      AND 			allFunders[a]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allFunders[a].transfer
      AND 			allFunders[a].transfer
      PUSH 8FC			allFunders[a].transfer(address...
      PUSH 6			addressToValue
      PUSH 0			addressToValue[allFunders[a]]
      PUSH 5			allFunders
      DUP6 			a
      DUP2 			allFunders[a]
      SLOAD 			allFunders[a]
      DUP2 			allFunders[a]
      LT 			allFunders[a]
      PUSH [tag] 75			allFunders[a]
      JUMPI 			allFunders[a]
      INVALID 			allFunders[a]
    tag 75			allFunders[a]
      JUMPDEST 			allFunders[a]
      SWAP1 			allFunders[a]
      PUSH 0			allFunders[a]
      MSTORE 			allFunders[a]
      PUSH 20			allFunders[a]
      PUSH 0			allFunders[a]
      KECCAK256 			allFunders[a]
      ADD 			allFunders[a]
      PUSH 0			allFunders[a]
      SWAP1 			allFunders[a]
      SLOAD 			allFunders[a]
      SWAP1 			allFunders[a]
      PUSH 100			allFunders[a]
      EXP 			allFunders[a]
      SWAP1 			allFunders[a]
      DIV 			allFunders[a]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allFunders[a]
      AND 			allFunders[a]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			addressToValue[allFunders[a]]
      AND 			addressToValue[allFunders[a]]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			addressToValue[allFunders[a]]
      AND 			addressToValue[allFunders[a]]
      DUP2 			addressToValue[allFunders[a]]
      MSTORE 			addressToValue[allFunders[a]]
      PUSH 20			addressToValue[allFunders[a]]
      ADD 			addressToValue[allFunders[a]]
      SWAP1 			addressToValue[allFunders[a]]
      DUP2 			addressToValue[allFunders[a]]
      MSTORE 			addressToValue[allFunders[a]]
      PUSH 20			addressToValue[allFunders[a]]
      ADD 			addressToValue[allFunders[a]]
      PUSH 0			addressToValue[allFunders[a]]
      KECCAK256 			addressToValue[allFunders[a]]
      PUSH 0			addressToValue[allFunders[a]]....
      ADD 			addressToValue[allFunders[a]]....
      SLOAD 			addressToValue[allFunders[a]]....
      SWAP1 			allFunders[a].transfer(address...
      DUP2 			allFunders[a].transfer(address...
      ISZERO 			allFunders[a].transfer(address...
      MUL 			allFunders[a].transfer(address...
      SWAP1 			allFunders[a].transfer(address...
      PUSH 40			allFunders[a].transfer(address...
      MLOAD 			allFunders[a].transfer(address...
      PUSH 0			allFunders[a].transfer(address...
      PUSH 40			allFunders[a].transfer(address...
      MLOAD 			allFunders[a].transfer(address...
      DUP1 			allFunders[a].transfer(address...
      DUP4 			allFunders[a].transfer(address...
      SUB 			allFunders[a].transfer(address...
      DUP2 			allFunders[a].transfer(address...
      DUP6 			allFunders[a].transfer(address...
      DUP9 			allFunders[a].transfer(address...
      DUP9 			allFunders[a].transfer(address...
      CALL 			allFunders[a].transfer(address...
      SWAP4 			allFunders[a].transfer(address...
      POP 			allFunders[a].transfer(address...
      POP 			allFunders[a].transfer(address...
      POP 			allFunders[a].transfer(address...
      POP 			allFunders[a].transfer(address...
      ISZERO 			allFunders[a].transfer(address...
      DUP1 			olidity >
      ISZERO 			a 
      PUSH [tag] 77			a 
      JUMPI 			a 
      RETURNDATASIZE 			crowdfunding{\r\n 
      PUSH 0			c
      DUP1 			t
      RETURNDATACOPY 			 <0.6.0;\r\n\r\ncontract crowd...
      RETURNDATASIZE 			r Struct\r\n    st
      PUSH 0			n
      REVERT 			   //Funder Struct\r\n    str
    tag 77			a 
      JUMPDEST 			a 
      POP 			allFunders[a].transfer(address...
      PUSH 6			addressToValue
      PUSH 0			addressToValue[allFunders[a]]
      PUSH 5			allFunders
      DUP4 			a
      DUP2 			allFunders[a]
      SLOAD 			allFunders[a]
      DUP2 			allFunders[a]
      LT 			allFunders[a]
      PUSH [tag] 78			allFunders[a]
      JUMPI 			allFunders[a]
      INVALID 			allFunders[a]
    tag 78			allFunders[a]
      JUMPDEST 			allFunders[a]
      SWAP1 			allFunders[a]
      PUSH 0			allFunders[a]
      MSTORE 			allFunders[a]
      PUSH 20			allFunders[a]
      PUSH 0			allFunders[a]
      KECCAK256 			allFunders[a]
      ADD 			allFunders[a]
      PUSH 0			allFunders[a]
      SWAP1 			allFunders[a]
      SLOAD 			allFunders[a]
      SWAP1 			allFunders[a]
      PUSH 100			allFunders[a]
      EXP 			allFunders[a]
      SWAP1 			allFunders[a]
      DIV 			allFunders[a]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allFunders[a]
      AND 			allFunders[a]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			addressToValue[allFunders[a]]
      AND 			addressToValue[allFunders[a]]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			addressToValue[allFunders[a]]
      AND 			addressToValue[allFunders[a]]
      DUP2 			addressToValue[allFunders[a]]
      MSTORE 			addressToValue[allFunders[a]]
      PUSH 20			addressToValue[allFunders[a]]
      ADD 			addressToValue[allFunders[a]]
      SWAP1 			addressToValue[allFunders[a]]
      DUP2 			addressToValue[allFunders[a]]
      MSTORE 			addressToValue[allFunders[a]]
      PUSH 20			addressToValue[allFunders[a]]
      ADD 			addressToValue[allFunders[a]]
      PUSH 0			addressToValue[allFunders[a]]
      KECCAK256 			addressToValue[allFunders[a]]
      PUSH 0			addressToValue[allFunders[a]]
      DUP1 			delete addressToValue[allFunde...
      DUP3 			delete addressToValue[allFunde...
      ADD 			delete addressToValue[allFunde...
      PUSH 0			delete addressToValue[allFunde...
      SWAP1 			delete addressToValue[allFunde...
      SSTORE 			delete addressToValue[allFunde...
      PUSH 1			delete addressToValue[allFunde...
      DUP3 			delete addressToValue[allFunde...
      ADD 			delete addressToValue[allFunde...
      PUSH 0			delete addressToValue[allFunde...
      SWAP1 			delete addressToValue[allFunde...
      SSTORE 			delete addressToValue[allFunde...
      POP 			delete addressToValue[allFunde...
      POP 			delete addressToValue[allFunde...
      PUSH 5			allFunders
      DUP2 			a
      DUP2 			allFunders[a]
      SLOAD 			allFunders[a]
      DUP2 			allFunders[a]
      LT 			allFunders[a]
      PUSH [tag] 80			allFunders[a]
      JUMPI 			allFunders[a]
      INVALID 			allFunders[a]
    tag 80			allFunders[a]
      JUMPDEST 			allFunders[a]
      SWAP1 			allFunders[a]
      PUSH 0			allFunders[a]
      MSTORE 			allFunders[a]
      PUSH 20			allFunders[a]
      PUSH 0			allFunders[a]
      KECCAK256 			allFunders[a]
      ADD 			allFunders[a]
      PUSH 0			allFunders[a]
      PUSH 100			delete allFunders[a]
      EXP 			delete allFunders[a]
      DUP2 			delete allFunders[a]
      SLOAD 			delete allFunders[a]
      SWAP1 			delete allFunders[a]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			delete allFunders[a]
      MUL 			delete allFunders[a]
      NOT 			delete allFunders[a]
      AND 			delete allFunders[a]
      SWAP1 			delete allFunders[a]
      SSTORE 			delete allFunders[a]
      DUP2 			trueLength--
      DUP1 			trueLength--
      PUSH 1			trueLength--
      SWAP1 			trueLength--
      SUB 			trueLength--
      SWAP3 			trueLength--
      POP 			trueLength--
      POP 			trueLength--
    tag 72			if(addressToValue[allFunders[a...
      JUMPDEST 			if(addressToValue[allFunders[a...
      DUP1 			a++
      DUP1 			a++
      PUSH 1			a++
      ADD 			a++
      SWAP2 			a++
      POP 			a++
      POP 			a++
      PUSH [tag] 67			for(uint a = 0; a<allFunders.l...
      JUMP 			for(uint a = 0; a<allFunders.l...
    tag 68			for(uint a = 0; a<allFunders.l...
      JUMPDEST 			for(uint a = 0; a<allFunders.l...
      POP 			for(uint a = 0; a<allFunders.l...
      PUSH 1			1
      DUP2 			trueLength
      PUSH 1			goal
      SLOAD 			goal
      DUP2 			goal /int(trueLength)
      PUSH [tag] 82			goal /int(trueLength)
      JUMPI 			goal /int(trueLength)
      INVALID 			goal /int(trueLength)
    tag 82			goal /int(trueLength)
      JUMPDEST 			goal /int(trueLength)
      SDIV 			goal /int(trueLength)
      ADD 			(goal /int(trueLength))+1
      SWAP2 			price = (goal /int(trueLength)...
      POP 			price = (goal /int(trueLength)...
    tag 66			if(finalValue != int(values[0]...
      JUMPDEST 			if(finalValue != int(values[0]...
      PUSH 0			uint iter
      DUP1 			0
      SWAP1 			uint iter = 0
      POP 			uint iter = 0
    tag 83			while (trueLength > 0){\r\n   ...
      JUMPDEST 			while (trueLength > 0){\r\n   ...
      PUSH 0			0
      DUP3 			trueLength
      GT 			trueLength > 0
      ISZERO 			while (trueLength > 0){\r\n   ...
      PUSH [tag] 84			while (trueLength > 0){\r\n   ...
      JUMPI 			while (trueLength > 0){\r\n   ...
      PUSH 0			0
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allFunders[iter] != address(0)
      AND 			allFunders[iter] != address(0)
      PUSH 5			allFunders
      DUP3 			iter
      DUP2 			allFunders[iter]
      SLOAD 			allFunders[iter]
      DUP2 			allFunders[iter]
      LT 			allFunders[iter]
      PUSH [tag] 85			allFunders[iter]
      JUMPI 			allFunders[iter]
      INVALID 			allFunders[iter]
    tag 85			allFunders[iter]
      JUMPDEST 			allFunders[iter]
      SWAP1 			allFunders[iter]
      PUSH 0			allFunders[iter]
      MSTORE 			allFunders[iter]
      PUSH 20			allFunders[iter]
      PUSH 0			allFunders[iter]
      KECCAK256 			allFunders[iter]
      ADD 			allFunders[iter]
      PUSH 0			allFunders[iter]
      SWAP1 			allFunders[iter]
      SLOAD 			allFunders[iter]
      SWAP1 			allFunders[iter]
      PUSH 100			allFunders[iter]
      EXP 			allFunders[iter]
      SWAP1 			allFunders[iter]
      DIV 			allFunders[iter]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allFunders[iter]
      AND 			allFunders[iter]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allFunders[iter] != address(0)
      AND 			allFunders[iter] != address(0)
      EQ 			allFunders[iter] != address(0)
      PUSH [tag] 87			if(allFunders[iter] != address...
      JUMPI 			if(allFunders[iter] != address...
      PUSH 5			allFunders
      DUP2 			iter
      DUP2 			allFunders[iter]
      SLOAD 			allFunders[iter]
      DUP2 			allFunders[iter]
      LT 			allFunders[iter]
      PUSH [tag] 88			allFunders[iter]
      JUMPI 			allFunders[iter]
      INVALID 			allFunders[iter]
    tag 88			allFunders[iter]
      JUMPDEST 			allFunders[iter]
      SWAP1 			allFunders[iter]
      PUSH 0			allFunders[iter]
      MSTORE 			allFunders[iter]
      PUSH 20			allFunders[iter]
      PUSH 0			allFunders[iter]
      KECCAK256 			allFunders[iter]
      ADD 			allFunders[iter]
      PUSH 0			allFunders[iter]
      SWAP1 			allFunders[iter]
      SLOAD 			allFunders[iter]
      SWAP1 			allFunders[iter]
      PUSH 100			allFunders[iter]
      EXP 			allFunders[iter]
      SWAP1 			allFunders[iter]
      DIV 			allFunders[iter]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allFunders[iter]
      AND 			allFunders[iter]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allFunders[iter].transfer
      AND 			allFunders[iter].transfer
      PUSH 8FC			allFunders[iter].transfer(addr...
      DUP5 			price
      PUSH 6			addressToValue
      PUSH 0			addressToValue[allFunders[iter...
      PUSH 5			allFunders
      DUP7 			iter
      DUP2 			allFunders[iter]
      SLOAD 			allFunders[iter]
      DUP2 			allFunders[iter]
      LT 			allFunders[iter]
      PUSH [tag] 90			allFunders[iter]
      JUMPI 			allFunders[iter]
      INVALID 			allFunders[iter]
    tag 90			allFunders[iter]
      JUMPDEST 			allFunders[iter]
      SWAP1 			allFunders[iter]
      PUSH 0			allFunders[iter]
      MSTORE 			allFunders[iter]
      PUSH 20			allFunders[iter]
      PUSH 0			allFunders[iter]
      KECCAK256 			allFunders[iter]
      ADD 			allFunders[iter]
      PUSH 0			allFunders[iter]
      SWAP1 			allFunders[iter]
      SLOAD 			allFunders[iter]
      SWAP1 			allFunders[iter]
      PUSH 100			allFunders[iter]
      EXP 			allFunders[iter]
      SWAP1 			allFunders[iter]
      DIV 			allFunders[iter]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allFunders[iter]
      AND 			allFunders[iter]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			addressToValue[allFunders[iter...
      AND 			addressToValue[allFunders[iter...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			addressToValue[allFunders[iter...
      AND 			addressToValue[allFunders[iter...
      DUP2 			addressToValue[allFunders[iter...
      MSTORE 			addressToValue[allFunders[iter...
      PUSH 20			addressToValue[allFunders[iter...
      ADD 			addressToValue[allFunders[iter...
      SWAP1 			addressToValue[allFunders[iter...
      DUP2 			addressToValue[allFunders[iter...
      MSTORE 			addressToValue[allFunders[iter...
      PUSH 20			addressToValue[allFunders[iter...
      ADD 			addressToValue[allFunders[iter...
      PUSH 0			addressToValue[allFunders[iter...
      KECCAK256 			addressToValue[allFunders[iter...
      PUSH 0			addressToValue[allFunders[iter...
      ADD 			addressToValue[allFunders[iter...
      SLOAD 			addressToValue[allFunders[iter...
      SUB 			addressToValue[allFunders[iter...
      SWAP1 			allFunders[iter].transfer(addr...
      DUP2 			allFunders[iter].transfer(addr...
      ISZERO 			allFunders[iter].transfer(addr...
      MUL 			allFunders[iter].transfer(addr...
      SWAP1 			allFunders[iter].transfer(addr...
      PUSH 40			allFunders[iter].transfer(addr...
      MLOAD 			allFunders[iter].transfer(addr...
      PUSH 0			allFunders[iter].transfer(addr...
      PUSH 40			allFunders[iter].transfer(addr...
      MLOAD 			allFunders[iter].transfer(addr...
      DUP1 			allFunders[iter].transfer(addr...
      DUP4 			allFunders[iter].transfer(addr...
      SUB 			allFunders[iter].transfer(addr...
      DUP2 			allFunders[iter].transfer(addr...
      DUP6 			allFunders[iter].transfer(addr...
      DUP9 			allFunders[iter].transfer(addr...
      DUP9 			allFunders[iter].transfer(addr...
      CALL 			allFunders[iter].transfer(addr...
      SWAP4 			allFunders[iter].transfer(addr...
      POP 			allFunders[iter].transfer(addr...
      POP 			allFunders[iter].transfer(addr...
      POP 			allFunders[iter].transfer(addr...
      POP 			allFunders[iter].transfer(addr...
      ISZERO 			allFunders[iter].transfer(addr...
      DUP1 			olidity >
      ISZERO 			a 
      PUSH [tag] 92			a 
      JUMPI 			a 
      RETURNDATASIZE 			crowdfunding{\r\n 
      PUSH 0			c
      DUP1 			t
      RETURNDATACOPY 			 <0.6.0;\r\n\r\ncontract crowd...
      RETURNDATASIZE 			r Struct\r\n    st
      PUSH 0			n
      REVERT 			   //Funder Struct\r\n    str
    tag 92			a 
      JUMPDEST 			a 
      POP 			allFunders[iter].transfer(addr...
      PUSH 4			funderList
      PUSH 5			allFunders
      DUP3 			iter
      DUP2 			allFunders[iter]
      SLOAD 			allFunders[iter]
      DUP2 			allFunders[iter]
      LT 			allFunders[iter]
      PUSH [tag] 93			allFunders[iter]
      JUMPI 			allFunders[iter]
      INVALID 			allFunders[iter]
    tag 93			allFunders[iter]
      JUMPDEST 			allFunders[iter]
      SWAP1 			allFunders[iter]
      PUSH 0			allFunders[iter]
      MSTORE 			allFunders[iter]
      PUSH 20			allFunders[iter]
      PUSH 0			allFunders[iter]
      KECCAK256 			allFunders[iter]
      ADD 			allFunders[iter]
      PUSH 0			allFunders[iter]
      SWAP1 			allFunders[iter]
      SLOAD 			allFunders[iter]
      SWAP1 			allFunders[iter]
      PUSH 100			allFunders[iter]
      EXP 			allFunders[iter]
      SWAP1 			allFunders[iter]
      DIV 			allFunders[iter]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allFunders[iter]
      AND 			allFunders[iter]
      SWAP1 			funderList.push(allFunders[ite...
      DUP1 			funderList.push(allFunders[ite...
      PUSH 1			t
      DUP2 			\n\r\n
      SLOAD 			.6.0;\r\n\r\nc
      ADD 			2 <0.6.0;\r\n\r\ncontr
      DUP1 			{\r\n    \r\n 
      DUP3 			ndi
      SSTORE 			crowdfunding{\r\n    \r\n  
      DUP1 			Struct\r\n  
      SWAP2 			Funder Struct\r\n  
      POP 			Funder Struct\r\n  
      POP 			pragma solidity >=0.4.22 <0.6....
      SWAP1 			funderList.push(allFunders[ite...
      PUSH 1			funderList.push(allFunders[ite...
      DUP3 			funderList.push(allFunders[ite...
      SUB 			funderList.push(allFunders[ite...
      SWAP1 			funderList.push(allFunders[ite...
      PUSH 0			funderList.push(allFunders[ite...
      MSTORE 			funderList.push(allFunders[ite...
      PUSH 20			funderList.push(allFunders[ite...
      PUSH 0			funderList.push(allFunders[ite...
      KECCAK256 			funderList.push(allFunders[ite...
      ADD 			funderList.push(allFunders[ite...
      PUSH 0			funderList.push(allFunders[ite...
      SWAP1 			funderList.push(allFunders[ite...
      SWAP2 			funderList.push(allFunders[ite...
      SWAP3 			funderList.push(allFunders[ite...
      SWAP1 			funderList.push(allFunders[ite...
      SWAP2 			funderList.push(allFunders[ite...
      SWAP1 			funderList.push(allFunders[ite...
      SWAP2 			funderList.push(allFunders[ite...
      PUSH 100			funderList.push(allFunders[ite...
      EXP 			funderList.push(allFunders[ite...
      DUP2 			funderList.push(allFunders[ite...
      SLOAD 			funderList.push(allFunders[ite...
      DUP2 			funderList.push(allFunders[ite...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			funderList.push(allFunders[ite...
      MUL 			funderList.push(allFunders[ite...
      NOT 			funderList.push(allFunders[ite...
      AND 			funderList.push(allFunders[ite...
      SWAP1 			funderList.push(allFunders[ite...
      DUP4 			funderList.push(allFunders[ite...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			funderList.push(allFunders[ite...
      AND 			funderList.push(allFunders[ite...
      MUL 			funderList.push(allFunders[ite...
      OR 			funderList.push(allFunders[ite...
      SWAP1 			funderList.push(allFunders[ite...
      SSTORE 			funderList.push(allFunders[ite...
      POP 			funderList.push(allFunders[ite...
      POP 			funderList.push(allFunders[ite...
      DUP2 			trueLength--
      DUP1 			trueLength--
      PUSH 1			trueLength--
      SWAP1 			trueLength--
      SUB 			trueLength--
      SWAP3 			trueLength--
      POP 			trueLength--
      POP 			trueLength--
    tag 87			if(allFunders[iter] != address...
      JUMPDEST 			if(allFunders[iter] != address...
      DUP1 			iter++
      DUP1 			iter++
      PUSH 1			iter++
      ADD 			iter++
      SWAP2 			iter++
      POP 			iter++
      POP 			iter++
      PUSH [tag] 83			while (trueLength > 0){\r\n   ...
      JUMP 			while (trueLength > 0){\r\n   ...
    tag 84			while (trueLength > 0){\r\n   ...
      JUMPDEST 			while (trueLength > 0){\r\n   ...
      PUSH 2			values
      PUSH 0			values
      PUSH [tag] 96			delete values
      SWAP2 			delete values
      SWAP1 			delete values
      PUSH [tag] 97			delete values
      JUMP [in]			delete values
    tag 96			delete values
      JUMPDEST 			delete values
      PUSH 1			goal
      PUSH 0			delete goal
      SWAP1 			delete goal
      SSTORE 			delete goal
      PUSH 0			finishTime
      DUP1 			delete finishTime
      SWAP1 			delete finishTime
      SSTORE 			delete finishTime
      POP 			function finishFunding() publi...
      POP 			function finishFunding() publi...
      POP 			function finishFunding() publi...
      POP 			function finishFunding() publi...
    tag 42			function finishFunding() publi...
      JUMPDEST 			function finishFunding() publi...
      JUMP [out]			function finishFunding() publi...
    tag 97			contract crowdfunding{\r\n    ...
      JUMPDEST 			contract crowdfunding{\r\n    ...
      POP 			contract crowdfunding{\r\n    ...
      DUP1 			contract crowdfunding{\r\n    ...
      SLOAD 			contract crowdfunding{\r\n    ...
      PUSH 0			contract crowdfunding{\r\n    ...
      DUP3 			contract crowdfunding{\r\n    ...
      SSTORE 			contract crowdfunding{\r\n    ...
      SWAP1 			contract crowdfunding{\r\n    ...
      PUSH 0			contract crowdfunding{\r\n    ...
      MSTORE 			contract crowdfunding{\r\n    ...
      PUSH 20			contract crowdfunding{\r\n    ...
      PUSH 0			contract crowdfunding{\r\n    ...
      KECCAK256 			contract crowdfunding{\r\n    ...
      SWAP1 			contract crowdfunding{\r\n    ...
      DUP2 			contract crowdfunding{\r\n    ...
      ADD 			contract crowdfunding{\r\n    ...
      SWAP1 			contract crowdfunding{\r\n    ...
      PUSH [tag] 99			contract crowdfunding{\r\n    ...
      SWAP2 			contract crowdfunding{\r\n    ...
      SWAP1 			contract crowdfunding{\r\n    ...
      PUSH [tag] 100			contract crowdfunding{\r\n    ...
      JUMP [in]			contract crowdfunding{\r\n    ...
    tag 99			contract crowdfunding{\r\n    ...
      JUMPDEST 			contract crowdfunding{\r\n    ...
      POP 			contract crowdfunding{\r\n    ...
      JUMP [out]			contract crowdfunding{\r\n    ...
    tag 100			contract crowdfunding{\r\n    ...
      JUMPDEST 			contract crowdfunding{\r\n    ...
      PUSH [tag] 101			contract crowdfunding{\r\n    ...
      SWAP2 			contract crowdfunding{\r\n    ...
      SWAP1 			contract crowdfunding{\r\n    ...
    tag 102			contract crowdfunding{\r\n    ...
      JUMPDEST 			contract crowdfunding{\r\n    ...
      DUP1 			contract crowdfunding{\r\n    ...
      DUP3 			contract crowdfunding{\r\n    ...
      GT 			contract crowdfunding{\r\n    ...
      ISZERO 			contract crowdfunding{\r\n    ...
      PUSH [tag] 103			contract crowdfunding{\r\n    ...
      JUMPI 			contract crowdfunding{\r\n    ...
      PUSH 0			contract crowdfunding{\r\n    ...
      DUP2 			contract crowdfunding{\r\n    ...
      PUSH 0			contract crowdfunding{\r\n    ...
      SWAP1 			contract crowdfunding{\r\n    ...
      SSTORE 			contract crowdfunding{\r\n    ...
      POP 			contract crowdfunding{\r\n    ...
      PUSH 1			contract crowdfunding{\r\n    ...
      ADD 			contract crowdfunding{\r\n    ...
      PUSH [tag] 102			contract crowdfunding{\r\n    ...
      JUMP 			contract crowdfunding{\r\n    ...
    tag 103			contract crowdfunding{\r\n    ...
      JUMPDEST 			contract crowdfunding{\r\n    ...
      POP 			contract crowdfunding{\r\n    ...
      SWAP1 			contract crowdfunding{\r\n    ...
      JUMP 			contract crowdfunding{\r\n    ...
    tag 101			contract crowdfunding{\r\n    ...
      JUMPDEST 			contract crowdfunding{\r\n    ...
      SWAP1 			contract crowdfunding{\r\n    ...
      JUMP [out]			contract crowdfunding{\r\n    ...
    .data
      5200C2D44EA95904101C5B019B6FC3F66E02DD39E47D86D4709D86BFC7B3BE02:
        43757272656e746c79206e6f206f7074696f6e20746f20726576657274206d6f6e6579
      A975C1EDE1A28DC16D489FBD9E39B3FCE4EEFF3403675ACE5FA47851A7557893:
        496e76616c69642066756e6420616d6f756e74206f6e6c792074686573652061726520616c6c6f77656420636865636b2067657456616c7565732829
